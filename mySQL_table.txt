create table user(
id varchar(20) primary key,
pw varchar(64) not null,
name varchar(20) not null,
address varchar(50),
phone varchar(20),
account varchar(20)
);

create table product(
pNumber int,
id varchar(20),
date_a datetime,
pName varchar(50),
image varchar(200),
pExplain varchar(2048),
pCondition varchar(5),
price varchar(20),
date_b datetime,
available int,
primary key(pNumber)
);

create table bid(
id varchar(20),
pNumber int,
bidPrice varchar(20)
);

create table closedBid(
pNumber int,	#상품번호
bidMaxID varchar(20),	#낙찰자
bidMaxPrice varchar(20),	#최고경매가(낙찰가)
takeProfit int,		#경매 마감 함수에서 0으로 설정, 판매자가 버튼을 눌러 낙찰가를 수령하면 1로 설정
primary key(pNumber)
);

create table kickedUser(
id varchar(20) primary key,
reason varchar(50)
);

create table report(
pNumber int,
reporter varchar(20),	#신고자
category varchar(20),	#신고유형
reason varchar(50)	#신고사유
);


# 경매 마감 함수
CREATE DEFINER=`root`@`localhost` FUNCTION `closing`() RETURNS int(11)
begin
    declare proLength int default (select max(pNumber) from product);	# 지역변수 선언, 반복문 돌리려고 product 테이블을 count
	declare i int default 1;	
    
	while (i <= proLength) do	
		#select date_b into @date_b from product where pNumber=i;	# @date_b라는 변수에 select한 date_b값 설정
        if timestampdiff(second, now(), (select date_b from product where pNumber=i)) < 0 && (select available from product where pNumber=i)=1 then	# date_b(마감기한)이 마이너스이고, available이 1인 경우
			update product set available = 0 where pNumber=i;	# 해당 상품의 available을 0으로 설정
            insert into closedBid values(i, (select id from bid where pNumber=i order by bidprice desc limit 1), (select max(bidPrice) from bid where pNumber=i), 0);	# closedBid 테이블에 해당 상품의 (상품번호, 낙찰가, 낙찰자, 0) insert
		end if;
        set i = i + 1;
	end while;

	return 1;
end


# closing 함수를 1초마다 실행시켜주는 이벤트
create event closing	
on schedule every 1 second		# 1초마다 실행
do
select closing();

drop event closing;

create table eventTest(
xzcv datetime
);
